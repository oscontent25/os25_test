name: Autograding Tests
on: 
  push:
    branches:
      - main
    # paths-ignore:
    #   - '.github/**'
env:
  IMG_URL_riscv64: https://github.com/Azure-stars/testsuits-for-oskernel/releases/download/v0.1/sdcard-riscv64.img.gz # 镜像url
  IMG_URL_loongarch64: https://github.com/Azure-stars/testsuits-for-oskernel/releases/download/v0.1/sdcard-loongarch64.img.gz # 镜像url
  IMG_URL_aarch64: https://github.com/Azure-stars/testsuits-for-oskernel/releases/download/v0.1/sdcard-aarch64.img.gz # 镜像url
  IMG_URL_x86_64: https://github.com/Azure-stars/testsuits-for-oskernel/releases/download/v0.1/sdcard-x86_64.img.gz # 镜像url
  TIMEOUT: 300 # 超时时间
  SCRIPT_REPO: https://github.com/oscontent25/EvaluationScript # 脚本仓库
 
jobs:  
  run-autograding-tests:
    runs-on: ubuntu-latest
    env:
      qemu-version: 9.2.1
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: nightly-2025-01-18
          components: rust-src, llvm-tools
          targets: x86_64-unknown-none, riscv64gc-unknown-none-elf, aarch64-unknown-none, aarch64-unknown-none-softfloat, loongarch64-unknown-none
      - uses: Swatinem/rust-cache@v2
      - run: cargo install cargo-binutils
      - uses: ./.github/workflows/setup-musl
        with:
          arch: riscv64
      - uses: ./.github/workflows/setup-musl
        with:
          arch: loongarch64
      - uses: ./.github/workflows/setup-musl
        with:
          arch: aarch64
      - uses: ./.github/workflows/setup-musl
        with:
          arch: x86_64
      - uses: ./.github/workflows/setup-qemu
        with:
          qemu-version: ${{ env.qemu-version }}
      - name: Build python environment
        run: sudo apt-get install -y python3 python3-pip
      - name: build os.bin
        run: |
          touch riscv64_output.txt
          touch loongarch64_output.txt
          touch aarch64_output.txt
          touch x86_64_output.txt
          make all ARCH=riscv64 || true 
          make all ARCH=loongarch64 || true 
          make all ARCH=aarch64 || true 
          make all ARCH=x86_64 || true 

      - name: run tests
        run: |
          wget $IMG_URL_riscv64 -O sdcard-riscv64.img.gz
          gunzip sdcard-riscv64.img.gz
          wget $IMG_URL_loongarch64 -O sdcard-loongarch64.img.gz
          gunzip sdcard-loongarch64.img.gz
          wget $IMG_URL_aarch64 -O sdcard-aarch64.img.gz
          gunzip sdcard-aarch64.img.gz
          wget $IMG_URL_x86_64 -O sdcard-x86_64.img.gz
          gunzip sdcard-x86_64.img.gz
          
          qemu-system-riscv64 -machine virt -kernel kernel-rv -m 2G -nographic -smp 1 -bios default -drive file=sdcard-riscv64.img,if=none,format=raw,id=x0 \
                              -device virtio-blk-device,drive=x0,bus=virtio-mmio-bus.0 -no-reboot -device virtio-net-device,netdev=net -netdev user,id=net \
                              -rtc base=utc | tee riscv64_output.txt || true  

          qemu-system-loongarch64 -machine virt -m 1G -smp 2 \
            -kernel kernel-la \
            -device virtio-blk-pci,drive=disk0 \
            -drive id=disk0,if=none,format=raw,file=sdcard-loongarch64.img \
            -device virtio-net-pci,netdev=net0 \
            -netdev user,id=net0,hostfwd=tcp::5555-:5555,hostfwd=udp::5555-:5555 \
            -nographic | tee loongarch64_output.txt || true  
          
          qemu-system-x86_64 -machine q35 -m 2G -smp 2 \
          -kernel kernel-x86 \
          -device virtio-blk-pci,drive=disk0 \
          -drive id=disk0,if=none,format=raw,file=sdcard-x86_64.img \
          -device virtio-net-pci,netdev=net0 \
          -netdev user,id=net0,hostfwd=tcp::5555-:5555,hostfwd=udp::5555-:5555 \
          -nographic | tee x86_64_output.txt || true  

          qemu-system-aarch64 \
          -cpu cortex-a72 -machine virt \
          -m 128M \
          -smp 1 \
          -kernel kernel-ar \
          -device virtio-blk-pci,drive=disk0 \
          -drive id=disk0,if=none,format=raw,file=sdcard-aarch64.img \
          -device virtio-net-pci,netdev=net0 \
          -netdev user,id=net0,hostfwd=tcp::5555-:5555,hostfwd=udp::5555-:5555 \
          -nographic | tee aarch64_output.txt || true  
 

      - name: Download EvaluationScript
        run: |
            git clone ${{ env.SCRIPT_REPO }} .github/classroom

      - name: riscvglibc-test
        uses: oscontent25/os-autograding@master
        id: autogradingriscvglibc
        with:
          outputfile: riscv64_output.txt
          scriptPath: .github/classroom/glibc
      - name: riscvmusl-test
        uses: oscontent25/os-autograding@master
        id: autogradingriscvmusl
        with:
          outputfile: riscv64_output.txt
          scriptPath: .github/classroom/musl
      - name: loongarchglibc-test
        uses: oscontent25/os-autograding@master
        id: autogradingloongarchglibc
        with:
          outputfile: loongarch64_output.txt
          scriptPath: .github/classroom/glibc
      - name: loongarchnusl-test
        uses: oscontent25/os-autograding@master
        id: autogradingloongarchmusl
        with:
          outputfile: loongarch64_output.txt
          scriptPath: .github/classroom/musl
      - name: aarchglibc-test
        uses: oscontent25/os-autograding@master
        id: autogradingaarchglibc
        with:
          outputfile: aarch64_output.txt
          scriptPath: .github/classroom/glibc
      - name: aarchmusl-test
        uses: oscontent25/os-autograding@master
        id: autogradingaarchmusl
        with:
          outputfile: aarch64_output.txt
          scriptPath: .github/classroom/musl
      - name: x86glibc-test
        uses: oscontent25/os-autograding@master
        id: autogradingx86glibc
        with:
          outputfile: x86_64_output.txt
          scriptPath: .github/classroom/glibc
      - name: x86musl-test
        uses: oscontent25/os-autograding@master
        id: autogradingx86musl
        with:
          outputfile: x86_64_output.txt
          scriptPath: .github/classroom/musl
      - name: Autograding Reporter
        uses: classroom-resources/autograding-grading-reporter@v1
        env:
          AUTOGRADINGRISCVGLIBC_RESULTS: "${{steps.autogradingriscvglibc.outputs.result}}"
          AUTOGRADINGLOONGARCHGLIBC_RESULTS: "${{steps.autogradingloongarchglibc.outputs.result}}"
          AUTOGRADINGAARCHGLIBC_RESULTS: "${{steps.autogradingaarchglibc.outputs.result}}"
          AUTOGRADINGX86GLIBC_RESULTS: "${{steps.autogradingx86glibc.outputs.result}}"
          AUTOGRADINGRISCVMUSL_RESULTS: "${{steps.autogradingriscvmusl.outputs.result}}"
          AUTOGRADINGLOONGARCHMUSL_RESULTS: "${{steps.autogradingloongarchmusl.outputs.result}}"
          AUTOGRADINGAARCHMUSL_RESULTS: "${{steps.autogradingaarchmusl.outputs.result}}"
          AUTOGRADINGX86MUSL_RESULTS: "${{steps.autogradingx86musl.outputs.result}}"
        with:
          runners: autogradingriscvglibc,autogradingloongarchglibc,autogradingaarchglibc,autogradingx86glibc,autogradingriscvmusl,autogradingloongarchmusl,autogradingaarchmusl,autogradingx86musl
          token: ${{ secrets.GITHUB_TOKEN }}

        
